invoketests

map (sort (getfiles c:\windows)) (write item) 

command performtests
  performtest (+ 47 11) 58
  performtest (- 47 11) 36
  performtest (* 47 11) 517
  performtest (/ 47 11) 4
  performtest (== 47 11) false
  performtest (!= 47 11) true
  performtest (< 47 11) false
  performtest (<= 47 11) false
  performtest (> 47 11) true
  performtest (>= 47 11) true
  performtest (== (array 1 2 3) (array 1 2 3)) true
  performtest (== (array 1 2 3) (array 1 2 4)) false
  performtest (== (array 1 2 3 4) (array 1 2 3)) false
  performtest (sum (array 1 2 3)) 6
  performtest (sumof 1 2 3) 6
  performtest (averageof 1 2 3 4) 2.5
  performtest (average (array 1 2 3 4)) 2.5
  performtest (square 2) 4
  performtest (factorial 5) 120
  performtest (ToString (at 'Hello' 1)) 'e'
  performtest (local result 0 for i 1 10 1 (local result (+ result i))) 55
  performtest (local result 0 foreach i (array 3 1 4 1) (local result (+ result i))) 9
  performtest (local product 1 map (array 3 1 4 1) (local product (* product item))) 12
  performtest (Length 'Hello World!') 12
  performtest (at (split 'Hello~nworld!') 1) 'world!'
  performtest (Count (list 1 2 3 4 5)) 5
  performtest (upperbound (array 1 2 3)) 2
  performtest (upperbound (split 'Hello~nworld')) 1
  performtest (size 'hugo') 4
  performtest (size (array 1 2 3 4 5 6)) 6
  performtest (size (list 1 2 3 4 5 6 7)) 7
  performtest (typename 'Hello') 'String'
  performtest (hasmember 'hugo' 'Length') true
  performtest (hasmember 'hugo' 'Count') false
  performtest (power 3 4) 81
  performtest (createdirectory c:\testdirectory directoryexists c:\testdirectory) true
  performtest (writefile c:\testdirectory\hello.txt hello readfile c:\testdirectory\hello.txt) 'hello'
  performtest (writefile c:\testdirectory\world.txt world readfile c:\testdirectory\world.txt) 'world'
  performtest (writefile c:\testdirectory\values.txt '6~n1~n7~n8~n5~n9' average (split (readfile c:\testdirectory\values.txt))) 6
  performtest (size (getfiles c:\testdirectory)) 3
  performtest (deletedirectory c:\testdirectory directoryexists c:\testdirectory) false
  performtest (sort 'hugo') 'ghou'
  performtest (sort (split '3~n1~n4~n1~n5~n9')) (array '1' '1' '3' '4' '5' '9')
  performtest (global value 4711 increment value 1 return value) 4712

command invoketests 
  global testsok true
  performtests
  write (if testsok 'tests ok' 'tests failed')

command performtest (tokens) expected
  if (!= (local actual (evaluate tokens)) expected) (setfailure (ToCode tokens) actual expected)

command setfailure code actual expected
  global testsok false 
  write '(failure) code: ([code]) actual: [actual] expected: [expected]'

command initialize
  global windowsdirectory 'C:\Windows'
  global programfilesdirectory 'C:\Program Files'
  global programfiles32directory 'C:\Program Files (x86)'
  global visualstudiodirectory (finddirectory '[programfiles32directory]\Microsoft Visual Studio' '????')
  global msbuildpath (findfile visualstudiodirectory 'MSBuild.exe')

command array ToArray arguments
command averageof average arguments
command average values / (todouble (sum values)) (size values)
command createdirectory directory Directory.CreateDirectory directory 
command deletedirectory directory Directory.Delete directory (return true) 
command dir directory run cmd /c "dir" directory
command directoryexists directory Directory.Exists directory 
command factorial n if (== n 1) 1 (* (factorial (- n 1)) n)
command finddirectory basedirectory pattern return (Helpers.FindDirectory basedirectory pattern)
command findfile basedirectory pattern return (Helpers.FindFile basedirectory pattern)
command getfiles path Directory.GetFiles path
command getmember instance name invokeinstancemember 'GetMember' (typeof instance) name
command hasmember instance name > (Length (getmember instance name)) 0
command hastype instance type == (typename instance) type
command increment (name) _increment set name (+ (get name) _increment)
command isarray instance invokeinstancemember 'IsArray' (typeof instance)
command isstring instance hastype instance String
command list return arguments
command power a b Math.Pow a b
command readfile path File.ReadAllText path
command size instance if (hasmember instance 'Length') (Length instance) (Count instance)
command sort instance switch (isarray instance) (sortarray instance) (isstring instance) (sortstring instance) (Sort instance)
command sortarray instance Array.Sort instance return instance
command sortstring value local characters (ToCharArray value) Array.Sort characters String.new characters
command split value Split value (at "~n" 1)
command square n * n n
command sum values local result 0 map values (increment result item)
command sumof sum arguments
command todouble n + n 0.0
command typename instance invokeinstancemember 'Name' (typeof instance)
command typeof instance invokeinstancemember 'GetType' instance
command upperbound value return (- (size value) 1)
command write message Console.WriteLine (ToString message)
command writefile path text File.WriteAllText path text
